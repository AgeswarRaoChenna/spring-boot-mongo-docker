apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-mongo-dep
  namespace: test-ns
spec:
  replicas: 2
  selector:
    matchLabels:
      app: spring-mongo
  template:
    metadata:
     labels:
        app: spring-mongo
    spec:
      containers:
      - name: spring-mongo-container
        image: agesh/spring-boot-mongo-docker:16
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 250m
            memory: 250Mi
          limits:
            cpu: 500m
            memory: 500Mi
        env:
        - name: MONGO_DB_HOSTNAME
          value: mongosvc
        - name: MONGO_DB_USERNAME
          value: devdb
        - name: MONGO_DB_PASSWORD
          value: devdb@123
---
apiVersion: v1
kind: Service
metadata:
  name: springappsvc
  namespace: test-ns
spec:
   type: NodePort
   selector:
      app: spring-mongo
   ports:
   - port: 80
     targetPort: 8080

---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: mongodb-rs
  namespace: test-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
     labels:
      app: mongodb
    spec:
      containers:
      - name: mongodb-container
        image: mongo
        resources:
          requests:
             cpu: 300m
             memory: 300Mi
          limits:
             cpu: 500m
             memory: 500Mi
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: devdb
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: devdb@123


---
apiVersion: v1
kind: Service
metadata:
   name: mongosvc
   namespace: test-ns
spec:
  selector:
    app: mongodb
  ports:
  - port: 27017
    targetPort: 27017

---
